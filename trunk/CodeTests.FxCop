<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/bin/Debug/AimlBot.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
    <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
    <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
    <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="IdentifiersShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainTypeNames" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="True" />
    <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="ParameterNamesShouldMatchBaseDeclaration" Enabled="True" />
    <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
    <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
    <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="ResourceStringsShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
    <Rule Name="UsePreferredTerms" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Namespaces>
   <Namespace Name="AimlBot.Data">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2008-05-07 13:34:25Z">
      <Issue>
       <Item>AimlBot.Data</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="AimlBot.Generate">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2008-05-07 13:34:25Z">
      <Issue>
       <Item>AimlBot.Generate</Item>
      </Issue>
      <Notes>
       <User Name="ntoll">
        <Note Id="2" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="AimlBot.Generate.Aiml">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2008-05-07 13:34:25Z">
      <Issue>
       <Item>AimlBot.Generate.Aiml</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="AimlBot.Normalize">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2008-05-12 11:49:51Z">
      <Issue>
       <Item>AimlBot.Normalize</Item>
      </Issue>
      <Notes>
       <User Name="ntoll">
        <Note Id="3" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="AimlBot.Normalize.Std">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2008-05-12 11:49:51Z">
      <Issue>
       <Item>AimlBot.Normalize.Std</Item>
      </Issue>
      <Notes>
       <User Name="ntoll">
        <Note Id="4" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/bin/Debug/AimlBot.dll">
    <Modules>
     <Module Name="aimlbot.dll">
      <Namespaces>
       <Namespace Name="AimlBot">
        <Types>
         <Type Name="Bot">
          <Members>
           <Member Name="#FsaGraph">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-12 11:49:51Z">
              <Issue>
               <Item>'Bot.FsaGraph'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#PatternFitExclusions">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Bot.PatternFitExclusions'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SentenceSplittingTokens">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Bot.SentenceSplittingTokens'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#WordSplittingTokens">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Bot.WordSplittingTokens'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="AimlBot.Data">
        <Types>
         <Type Name="PredicateDictionary">
          <Members>
           <Member Name="#ID">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2008-05-12 10:42:54Z">
              <Issue>
               <Item>'PredicateDictionary.ID'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="AimlBot.Generate">
        <Types>
         <Type Name="Template">
          <Members>
           <Member Name="#Request">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Template.Request'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Source">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Template.Source'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="AimlBot.Generate.Aiml">
        <Types>
         <Type Name="AimlElement">
          <Members>
           <Member Name="#.ctor(System.Xml.XmlElement,AimlBot.Generate.Aiml.AimlTemplate)">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Excluded" Created="2008-05-12 11:08:15Z">
              <Issue Name="Xml">
               <Item>'AimlElement.AimlElement(XmlElement, AimlTemplate)'</Item>
               <Item>'XmlElement'</Item>
              </Issue>
              <Notes>
               <User Name="ntoll">
                <Note Id="9" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Element">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'AimlElement.Element'</Item>
              </Issue>
             </Message>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Created="2008-05-07 13:34:25Z">
              <Issue Name="Xml">
               <Item>'AimlElement.Element'</Item>
               <Item>'XmlElement'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#isRecursive">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'AimlElement.isRecursive'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Request">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'AimlElement.Request'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Template">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'AimlElement.Template'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="AimlBot.Generate.Aiml.Elements">
        <Types>
         <Type Name="BotElement">
          <Members>
           <Member Name="#.ctor(System.Xml.XmlElement,AimlBot.Generate.Aiml.AimlTemplate)">
            <Messages>
             <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Excluded" Created="2008-05-12 12:18:44Z">
              <Issue Name="Xml">
               <Item>'BotElement.BotElement(XmlElement, AimlTemplate)'</Item>
               <Item>'XmlElement'</Item>
              </Issue>
              <Notes>
               <User Name="ntoll">
                <Note Id="8" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="JavascriptElement">
          <Messages>
           <Message Id="Javascript" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2008-05-12 12:18:44Z">
            <Issue Name="TypeShouldBeCompoundWord">
             <Item>Javascript</Item>
             <Item>'JavascriptElement'</Item>
             <Item>JavaScript</Item>
            </Issue>
            <Notes>
             <User Name="ntoll">
              <Note Id="5" />
             </User>
            </Notes>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="AimlBot.Graph">
        <Types>
         <Type Name="Node">
          <Members>
           <Member Name="#Children">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Node.Children'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Learn(System.String[],System.String,System.String)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2008-05-07 13:34:25Z">
              <Issue Name="TooGeneric">
               <Item>'Node.Learn(string[], string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue Name="TooGeneric">
               <Item>'Node.Learn(string[], string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue Name="TooGeneric">
               <Item>'Node.Learn(string[], string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Source">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Node.Source'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Template">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Node.Template'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Query">
          <Members>
           <Member Name="#.ctor(System.String[],System.DateTime)">
            <Messages>
             <Message Id="Timeout" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2008-05-12 12:59:37Z">
              <Issue Name="MemberParameter">
               <Item>'Query.Query(string[], DateTime)'</Item>
               <Item>Timeout</Item>
               <Item>'TimeoutAfter'</Item>
               <Item>timeout</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Node">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-07 13:34:25Z">
              <Issue>
               <Item>'Query.Node'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#startedOn">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2008-05-12 12:59:37Z">
              <Issue>
               <Item>'Query.startedOn'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TimeoutAfter">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-12 12:59:37Z">
              <Issue>
               <Item>'Query.TimeoutAfter'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Wildcards">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Excluded" Created="2008-05-12 13:03:49Z">
              <Issue>
               <Item>'Query.Wildcards'</Item>
               <Item>'Dictionary&lt;string, List&lt;string&gt;&gt;'</Item>
              </Issue>
              <Notes>
               <User Name="ntoll">
                <Note Id="7" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="AimlBot.Normalize.Utils">
        <Types>
         <Type Name="FsaNode">
          <Members>
           <Member Name="#Children">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-12 11:49:51Z">
              <Issue>
               <Item>'FsaNode.Children'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Depth">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-12 11:49:51Z">
              <Issue>
               <Item>'FsaNode.Depth'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Replace">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2008-05-12 11:49:51Z">
              <Issue>
               <Item>'FsaNode.Replace'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Notes>
   <User Name="ntoll">
    <Note Id="2" Modified="2008-05-07 15:18:15Z">In this case we don't want any more types</Note>
    <Note Id="3" Modified="2008-05-12 11:55:17Z">Arbitrary number five is quite pointless... especially as the namespaces std and utils aid understanding of the child classes. In addition, these namespaces are likely to grow in future versions.</Note>
    <Note Id="4" Modified="2008-05-12 11:56:26Z">Number five is pointless arbitrary value. Std namespace is expressive of function of child classes and this namespace is likely to grow in later versions.</Note>
    <Note Id="5" Modified="2008-05-12 12:28:20Z">JavaScript would break the element name -&gt; class name convention so we need to have Javascript</Note>
    <Note Id="7" Modified="2008-05-12 13:04:27Z">Not applicable in this situation</Note>
    <Note Id="8" Modified="2008-05-12 13:09:07Z">This class is used to interpret an XmlElement so the specific argument type is appropriate.</Note>
    <Note Id="9" Modified="2008-05-12 13:15:11Z">AimlElements are always used to interpret XmlElement types so the specific argument type is justified.</Note>
   </User>
  </Notes>
  <Rules>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
    <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
    <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   </Rule>
   <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
    <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   </Rule>
   <Rule TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059">
    <Resolution Name="Xml">Modify member {0} so that it no longer exposes the concrete type {1}. Use IXPathNavigable to represent XML data sources.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
