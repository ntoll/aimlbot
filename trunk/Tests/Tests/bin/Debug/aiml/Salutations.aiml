<?xml version="1.0" encoding="ISO-8859-1"?>
<aiml version="1.0.1" xmlns="http://alicebot.org/2001/AIML-1.0.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://alicebot.org/2001/AIML-1.0.1 http://aitools.org/aiml/schema/AIML.xsd">
  <!-- Free software &copy; 2001-2003 ALICE A.I. Foundation. -->
  <!-- This program is open source code released under -->
  <!-- the terms of the GNU General Public License     -->
  <!-- as published by the Free Software Foundation.   -->
  <!-- Complies with AIML 1.01 Tag Set Specification -->
  <!-- as adopted by the ALICE A.I. Foundation.  -->
  <!-- Annotated Version updated September 2003 -->
  <category>
    <pattern>TEST MISSING CUSTOM TAG</pattern>
    <template>
      <missingtag>The inner text of the missing tag</missingtag>
    </template>
  </category>
  <category>
    <pattern>BLINDSETMATCH</pattern>
    <template>
      <think>
        <set name="test">match</set>
      </think>
    </template>
  </category>
  <category>
    <pattern>TEST CUSTOM TAG</pattern>
    <template>
      <testtag>inner text is here</testtag>
    </template>
  </category>
  <category>
    <pattern>TEST CUSTOM TAG OVERRIDE</pattern>
    <template>
      <system/>
    </template>
  </category>
  <category>
    <pattern>BYE</pattern>
    <template>Cheerio</template>
  </category>
  <category>
    <pattern>TEST BLOCK RECURSIVE CALL</pattern>
    <template>
      <srai>blindsetmatch</srai>
      <condition name="test" value="match">Test passed.</condition>
      <think>
        <set name="test"/>
      </think>
    </template>
  </category>
  <category>
    <pattern>TEST MULTI CONDITION</pattern>
    <template>
      <condition>
        <li name="test1" value="match1">test 1 match 1 found</li>
        <li name="test1" value="match2">test 1 match 2 found</li>
        <li name="test2" value="match1">test 2 match 1 found</li>
        <li name="test2" value="match2">test 2 match 2 found</li>
        <li name="test3" value="match * the * works">match * found</li>
        <li>default match found</li>
      </condition>
    </template>
  </category>
  <category>
    <pattern>TEST SINGLE CONDITION</pattern>
    <template>
      <condition name="test">
        <li value="match1">match 1 found</li>
        <li value="match2">match 2 found</li>
        <li value="match * the * works">match * found</li>
        <li>default match found</li>
      </condition>
    </template>
  </category>
  <category>
    <pattern>TEST BLOCK CONDITION</pattern>
    <template>
      <think>
        <set name="test">match</set>
      </think>
      <condition name="test" value="match">Test passed.</condition>
      <think>
        <set name="test"/>
      </think>
    </template>
  </category>
  <category>
    <pattern>WHAT IS MY FORTUNE</pattern>
    <template>
      <fortunecookie/>
    </template>
  </category>
  <category>
    <pattern>TEST CHILD THINK</pattern>
    <template>
      You should see this<think>
        but not this<gossip>some gossip</gossip>
      </think>
    </template>
  </category>
  <category>
    <pattern>TEST THINK</pattern>
    <template>
      You should see this<think>but not this</think>
    </template>
  </category>
  <category>
    <pattern>TEST NEWS TAG</pattern>
    <template>
      <news/>
    </template>
  </category>
  <category>
    <pattern>TEST NEWS TAG WITH DESCRIPTIONS</pattern>
    <template>
      <news description="true"/>
    </template>
  </category>
  <category>
    <pattern>TEST PIG LATIN</pattern>
    <template>
      <piglatin>(All the world is a stage!)</piglatin>
    </template>
  </category>
  <category> 
    <pattern>TEST SET AND CONDITION</pattern> 
    <template>
      <think>
        <set name="temp">a</set>

        <condition name="temp" value="a">
          <set name="temp2">1</set>
        </condition>
        <condition name="temp" value="b">
          <set name="temp2">2</set>
        </condition>
        <condition name="temp" value="c">
          <set name="temp2">3</set>
        </condition>
      </think>
      End value: <get name="temp2"/> 
    </template> 
  </category>
</aiml>
